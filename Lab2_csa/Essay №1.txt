Основополагающей темой презентации Брета Виктора является его недавнее наблюдение касательно быстрого развития технологий, отмечая при этом экспоненциальный рост мощности вычислительной техники и несоответствующее ему медленное изменение сознания людей для принятия новых идей и образов мышления. Далее в течение своей презентации Брет приводит множество различных примеров, неоднократно подтверждающих его наблюдение. Начиная с создания первого компьютера IBM 650 для общего пользования, многие люди стали программировать, используя бинарный код, однако после изобретения ассемблера, который в свою очередь многократно упрощает их деятельность, эти же люди восприняли новую идею, требующую забыть старое: то, что вы знали, и начать думать по-новому, без энтузиазма. Также приводится пример с изобретением Джоном Бэксом Фортрана - более высокоуровневого языка, который опять же не был принят людьми. Заканчивая с приведением примеров, подтверждающих его наблюдение, Брет последовательно рассказывает о четырёх выработанных в ходе этого исследования идеях. Первая идея касается прямого манипулирования данными, что позволяет создавать программы без написания кода. Вторая идея связана с программированием с использованием целей, где компьютер сам решает, как достичь заданной цели. Третья идея - это использование видеодисплеев для пространственного представления информации. Четвертая идея - переход от последовательного программирования к параллельному в связи с развитием массивно параллельного оборудования. Главным посылом Брета является смена образа мышления в сторону чего-то нового, и люди не должны относиться к этому с пренебрежением.

 Я полностью разделяю позицию Брета Виктора, потому что он описал абстрактную модель должного поведения человека на конкретном примере: область технологий и вычислительной техники. Действительно, мы можем вспомнить множество примеров из нашей жизни, когда, сталкиваясь с новой технологией, неважно какой, будь это язык низкоуровневого либо высокоуровневого программирования, фреймворк, который нужен глобально для всё той же задачи, или же методология разработки программного обеспечения, вас переполняет чувство брезгливости к этому, ведь это что-то новое для вас, и тем более вы не хотите забывать свои ранее полученные навыки и знания, но как в таком случае вы будете идти в ногу со временем, поспевая за новыми технологии, если вы продолжаете игнорировать, отказываясь наотрез имплементировать хоть какие-то из них в свою жизнь. Как мне кажется, основная идея этого материала будет оставаться ещё долгое время актуальной и полезной для всех последующих поколений программистов и не только.

 Если касательно идей Брета Виктора, то в наше время, или же спустя двенадцать лет, уже можно привести различные примеры реализаций этих идей. Говоря о первой идее, можно привести пример платформы Bubble, позволяющей пользователям строить веб-приложения, перетаскивая элементы интерфейса на рабочей области. Пользователи могут создавать базы данных, устанавливать связи между данными и настраивать логику приложения, просто нажимая кнопки и перетаскивая объекты, что делает создание сложных приложений доступным даже для людей без технического образования. Переходя ко второй, следует упомянуть о подходах, использующих нейронные сети для генерации кода. Примеры таких систем, как OpenAI Codex, которые могут понимать естественный язык и превращать текстовые команды в работающий код. Пользователь может задать цель, например, создать веб-приложение с определенными функциями, и система будет генерировать соответствующий код, выбирая самостоятельно лучшие пути и методы достижения этой цели. Говоря о третьей идее, можно рассказать про систему умный город, в таких городах, как Сингапур и Токио, где используются большие светодиодные экраны для отображения информации о движении транспорта, состоянии погоды. Для четвёртой идеи можно привести пример: блокчейн-системы, использующие параллельное выполнение транзакций, что позволяет ускорить процессы подтверждения и уменьшить время ожидания для пользователей. Дальше - больше.